{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/editor/editor.component.css","webpack:///./src/app/components/editor/editor.component.html","webpack:///./src/app/components/editor/editor.component.ts","webpack:///./src/app/components/new-problem/new-problem.component.css","webpack:///./src/app/components/new-problem/new-problem.component.html","webpack:///./src/app/components/new-problem/new-problem.component.ts","webpack:///./src/app/components/problem-detail/problem-detail.component.css","webpack:///./src/app/components/problem-detail/problem-detail.component.html","webpack:///./src/app/components/problem-detail/problem-detail.component.ts","webpack:///./src/app/components/problem-list/problem-list.component.css","webpack:///./src/app/components/problem-list/problem-list.component.html","webpack:///./src/app/components/problem-list/problem-list.component.ts","webpack:///./src/app/services/collaboration.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'oj-haha';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\n\nimport {routing} from './app.routes';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport { EditorComponent } from './components/editor/editor.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    EditorComponent\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Routes, RouterModule} from '@angular/router';\nimport {ProblemListComponent} from './components/problem-list/problem-list.component';\nimport {ProblemDetailComponent} from './components/problem-detail/problem-detail.component';\n\nconst routes: Routes =[\n{\npath: '',\nredirectTo: 'problems',\npathMatch: 'full'// excatly match\n},\n{\npath: 'problems',\ncomponent: ProblemListComponent\n},\n\n{\npath: 'problems/:id', // :id is parameter e.g. problems/1 (id=1)\ncomponent: ProblemDetailComponent\n},\n{\npath:'**', // any other routes redirect to 'problems'\nredirectTo: 'problems'\n}\n]\nexport const routing = RouterModule.forRoot(routes);\n","module.exports = \"@media screen {\\n\\t#editor {\\n\\t\\theight: 600px;\\n\\t}\\n\\t.lang-select {\\n\\t\\twidth: 100px;\\n\\t\\tmargin-right: 10px;\\n\\t}\\n\\theader .btn {\\n\\t\\tmargin: 0 5px;\\n\\t}\\n\\tfooter .btn {\\n\\t\\tmargin: 0 5px;\\n\\t}\\n\\t.editor-footer, .editor-header {\\n\\t\\tmargin: 10px 0;\\n\\t}\\n\\t.cursor {\\n/*position:absolute;*/\\n\\t\\tbackground: rgba(0, 250, 0, 0.5);\\n\\t\\tz-index: 40;\\n\\t\\twidth: 2px !important;\\n\\t}\\n}\"","module.exports = \"<section>\\n\\t<header class=\\\"editor-header\\\">\\n<!-- for select language-->\\n<!-- when change, call setLanguage(language)-->\\n\\t\\t<select class=\\\"form-control pull-left lang-select\\\" name=\\\"language\\\" [(ngModel)]=\\\"language\\\" (change)=\\\"setLanguage(language)\\\">\\n\\t\\t\\t<option *ngFor=\\\"let language of languages\\\" [value]=\\\"language\\\"> {{language}}\\n\\t\\t\\t</option>\\n\\t\\t</select>\\n<!--reset button -->\\n<!-- Button trigger modal -->\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\"> Reset\\n\\t\\t</button>\\n<!-- Modal -->\\n\\t\\t<div class=\\\"modal fade\\\" id=\\\"myModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n\\t\\t\\t<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n\\t\\t\\t\\t<div class=\\\"modal-content\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"modal-header\\\">\\n\\t\\t\\t\\t\\t\\t<h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Are you sure</h5>\\n\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n\\t\\t\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"modal-body\\\">\\nYou will lose current code in the editor, are you sure?\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\n\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n\\n\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"resetEditor()\\\">Reset</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</header>\\n\\t\\n\\t<div id=\\\"editor\\\">\\n\\t</div>\\n\\t\\n\\t<footer class=\\\"editor-footer\\\">\\n\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success pull-right\\\" (click)=\\\"submit()\\\">Submit Solution</button>\\n\\t</footer>\\n</section>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CollaborationService} from '../../services/collaboration.service';\nimport {ActivatedRoute,Params} from '@angular/router';\ndeclare var ace: any;\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css']\n})\nexport class EditorComponent implements OnInit {\n\teditor :any;\n\tsessionId: string;\n\n\tpublic languages: string[]=['Java','Python'];\n\tlanguage: string = 'Java';\n\tdefaultContent = {\n\t\t'Java':`public class Example{\n\tpublic static void main(String[] args){\n\t//type your java code here\n\t}}`,\n\t\t'Python':`class Solution:\n\t\t\tdef example():\n\t\t\t\t#write your Python code here`\n\t};\n  constructor(private collaboration: CollaborationService, private route:ActivatedRoute) { }\n\n  ngOnInit() {\n  \t\n  \tthis.route.params.subscribe(\n  \t\tparams=>{\n  \t\t\tthis.sessionId = params['id'];\n  \t\t\tthis.initEditor();\n  \t\t})\n  \t}\n\t\n  resetEditor(): void{\n   \tthis.editor.setValue(this.defaultContent[this.language]);\n  \tthis.editor.getSession().setMode(\"ace/mode/\"+this.language.toLowerCase());\n \t\n  }\n\n  setLanguage(language: string): void{\n  \tthis,language=language;\n  \tthis.resetEditor();\n  }\n\n  submit():void{\n  \tlet usercode = this.editor.getValue();\n  \tconsole.log(usercode);\n  }\n\n  initEditor(): void {\nthis.editor = ace.edit(\"editor\");\nthis.editor.setTheme(\"ace/theme/eclipse\");\nthis.resetEditor();\ndocument.getElementsByTagName('textarea')[0].focus();\n// setup collaboration socket\nthis.collaboration.init(this.editor, this.sessionId);\nthis.editor.lastAppliedChange = null;\n// registrer change callback\nthis.editor.on(\"change\", (e) => {\nconsole.log('editor changes: ' + JSON.stringify(e));\n\nif (this.editor.lastAppliedChange != e) {\nthis.collaboration.change(JSON.stringify(e));\n}\n})\n}\n\n  \n\n  \n\n  \n}\n","module.exports = \"\"","module.exports = \"<div>\\n<form #formRef=\\\"ngForm\\\">\\n<div class=\\\"form-group\\\">\\n<label for=\\\"problemName\\\">Problem Name</label>\\n<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemName\\\"\\nname=\\\"problemName\\\" placeholder=\\\"Input problem name\\\" required\\n[(ngModel)]=\\\"newProblem.name\\\">\\n</div>\\n<div class=\\\"form-group\\\">\\n<label for=\\\"problemDesc\\\">Problem Description</label>\\n<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemDesc\\\"\\nname=\\\"problemDesc\\\" placeholder=\\\"Input description\\\" required\\n[(ngModel)]=\\\"newProblem.desc\\\">\\n</div>\\n<div class=\\\"form-group\\\">\\n<label for=\\\"difficulty\\\">Difficulty</label>\\n<select class=\\\"form-control\\\" id=\\\"difficulty\\\" name=\\\"difficulty\\\"\\n[(ngModel)]=\\\"newProblem.difficulty\\\">\\n<option *ngFor=\\\"let difficulty of difficulties\\\" [value]=\\\"difficulty\\\">\\n{{difficulty}}\\n</option>\\n</select>\\n</div>\\n<div class=\\\"row\\\">\\n<div class=\\\"col-md-12\\\">\\n<button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\"\\n(click)=\\\"addProblem()\\\">Add problem</button>\\n</div>\\n</div>\\n</form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Problem} from '../../models/problem.model';\nimport {DataService} from '../../services/data.service';\n\nconst DEFAULT_PROBLEM: Problem = Object.freeze(\n{\n\tid:0,\n\tname: '',\n\tdesc: '',\n\tdifficulty: 'easy'\n})\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent implements OnInit {\n\tnewProblem: Problem = Object.assign({},DEFAULT_PROBLEM);\n\tdifficulties: string[] = ['easy','mediem','hard','super'];\n\n  constructor(private dataService : DataService) { }\n\n  ngOnInit() {\n  }\n  addProblem(){\n  \tthis.dataService.addProblem(this.newProblem);\n  \tthis.newProblem=Object.assign({},DEFAULT_PROBLEM);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"problem\\\">\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-sm-12 col-md-4\\\">\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<h2>\\n\\t\\t\\t\\t\\t{{problem.id}}.{{problem.name}}\\n\\t\\t\\t\\t</h2>\\n\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t{{problem.desc}}\\n\\t\\t\\t\\t</p>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"hidden-xs col-sm-12 col-md-8\\\">\\n\\t\\t\\t<app-editor></app-editor>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","import { Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Params} from '@angular/router';\nimport {Problem} from '../../models/problem.model';\nimport {DataService} from '../../services/data.service';\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n\tproblem: Problem;\n  constructor(private dataService: DataService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n  \tthis.route.params.subscribe(params=>{\n  \t\t//this.problem=this.dataService.getProblem(+params['id']);\n      this.dataService.getProblem(+params['id'])\n        .then(problem=>this.problem=problem);\n  \t});\n  }\n\n}\n","module.exports = \".difficult {\\nmin-width: 65px;\\nmargin-right: 18px;\\n}\\n.badge.difficulty {\\npadding-top: 0.6em;\\ncolor: #fbfdfa;\\nfont-size: 12px;\\n}\\n.title {\\nfont-size: 1.2em;\\n}\\n.diff-easy {\\nbackground-color: #42ebf4;\\n}\\n.diff-medium {\\nbackground-color: #92cf5c;\\n}\\n.diff-hard {\\nbackground-color: #770077;\\n}\\n.diff-super{\\nbackground-color: #8d16e2;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n\\t<app-new-problem></app-new-problem>\\n\\t<div class=\\\"list-group\\\">\\n\\t\\t<a class=\\\"list-group-item\\\" *ngFor=\\\"let problem of problems\\\"\\n\\t\\t[routerLink]=\\\"['/problems',problem.id]\\\">\\n\\t\\t\\t<span class=\\\"{{'pull-left badge difficulty diff-' +\\nproblem.difficulty.toLocaleLowerCase()}}\\\">\\n\\t\\t\\t{{problem.difficulty}}\\n\\t\\t\\t</span>\\n\\t\\t\\t<strong class=\\\"title\\\">{{problem.id}}. {{problem.name}}</strong>\\n\\t\\t</a>\\n\\t</div>\\n</div>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport { Problem } from '../../models/problem.model';\n\nimport {DataService} from '../../services/data.service';\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.css']\n})\nexport class ProblemListComponent implements OnInit, OnDestroy {\n  problems: Problem[];\n  subscriptionProblems: Subscription;\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n  \tthis.getProblems();\n  }\n  ngOnDestroy(){\n  \tthis.subscriptionProblems.unsubscribe();\n  }\n\n  getProblems() {\n//this.problems = this.dataService.getProblems();\n\tthis.subscriptionProblems = this.dataService.getProblems() \n\t\t.subscribe(problems=> this.problems = problems);\n}\n\n}\n","import { Injectable } from '@angular/core';\n\ndeclare var io: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollaborationService {\n\tcollaborationSocket: any;\n  constructor() { }\n  init(editor: any, sessionId: string): void {\n\tthis.collaborationSocket = io(window.location.origin, {query:'sessionId=' + sessionId});\n// handler the changes send from server.\n\tthis.collaborationSocket.on(\"change\", (delta: string) => {\n\t\tconsole.log('collabration: editor changes by ' + delta);\n\t\tdelta = JSON.parse(delta); // delta is json format\n\t\teditor.lastAppliedChange = delta;\n// apply the changes on editor\n\t\teditor.getSession().getDocument().applyDeltas([delta]);\n\t\t});\n\t}\n// emit event to make changes and inform server and other\n\t\n\tchange(delta: string): void {\n// emit \"change\" event\n\t\tthis.collaborationSocket.emit(\"change\", delta);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {BehaviorSubject} from 'rxjs';\nimport {Problem} from '../models/problem.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\tprivate  _problemSource = new BehaviorSubject<Problem[]>([]);\n\n  constructor(private httpClient: HttpClient) {}\n/*\n  getProblems(): Problem[]{\n  \treturn this.problems;\n  } \n\n  getProblem(id: number): Problem{\n  \treturn this.problems.find((problem)=>problem.id === id);\n  }\n\n  addProblem(problem: Problem){\n  \tproblem.id = this.problems.length+1;\n  \tthis.problems.push(problem);\n  }\n  */\n  getProblems(): Observable<Problem[]> {\n    this.httpClient.get('api/v1/problems')\n      .toPromise()\n      .then((res: any)=>{\n        this._problemSource.next(res);\n\n      })\n      .catch(this.handleError);\n      return this._problemSource.asObservable();\n  }\n\n  getProblem(id:number): Promise<Problem>{\n    return this.httpClient.get(`api/v1/problems/${id}`)\n      .toPromise()\n      .then((res:any)=>res)\n      .catch(this.handleError);\n  }\n\n  addProblem(problem: Problem){\n    const options = {headers: new HttpHeaders({'Content-Type':\"application/json\"})};\n    return this.httpClient.post('api/v1/problems',problem, options)\n      .toPromise()\n      .then((res:any)=>{\n        this.getProblems();\n\n        return res;\n      })\n      .catch(this.handleError);\n  }\n\n  private handleError(error : any): Promise<any>{\n    return Promise.reject(error.body || error);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}